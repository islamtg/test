name: POI CI/CD

env:
  poi_path: apis/poi/**
  registry: openhackggp0ljh0acr.azurecr.io
  repository: devopsoh/api-poi
  docker_path: apis/poi/web
  staging_url: https://openhackggp0ljh0poi-staging.azurewebsites.net
  prod_url: https://openhackggp0ljh0poi.azurewebsites.net
  resource_group: openhackggp0ljh0rg
  webapp_name: openhackggp0ljh0poi
  build_name: POI
  acr_username: openhackggp0ljh0acr



on:
  push:
    branches: [ master ]
    paths: 
      - apis/poi/**  
      - '.github/workflows/poi-ci.yaml'
  pull_request:
    branches: [ master ]
    paths: 
      - apis/poi/**
      - '.github/workflows/poi-ci.yaml'

jobs:
  
  ### The following code builds the .NET code, runs the .NET code and unit tests #####   
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
    
    #- name: Add Code Coverage Tools
    #  working-directory: apis/poi/tests/UnitTests
    #  run: dotnet add package coverlet.msbuild

    - name: Install dependencies
      run: dotnet restore apis/poi/web/*.csproj
      
    - name: .NET Build Web
      run: dotnet build --configuration Release --no-restore apis/poi/web/*.csproj

    - name: .NET Build Unit Tests
      run: dotnet build --configuration Release apis/poi/tests/UnitTests/UnitTests.csproj

    - name: .NET Test
      run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests
      
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUBTOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            assignees: [ '${{ github.actor }}' ],
            body: 'POI Build failed'
          });

### The following code builds the docker image and pushes it to ACR #####
  docker_build_and_push:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:     
    - uses: actions/checkout@v2
    - name: Docker login
      uses: Azure/docker-login@v1     
      with:
        #ACR name
        username: ${{ secrets.ACR_LOGIN }}
        #ACR password
        password: ${{ secrets.ACR_KEY }}
        #ACR URL
        login-server: ${{ secrets.ACR_REGISTRY }}
      #run: docker login $registry -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.GITHUB_TOKEN }}

    - name: Docker build
      run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path

    - name: Docker Push
      run: docker push $registry/$repository:${{github.run_number}}  
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUBTOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });

### The following code Deploys to Staging Slot. #####
  deploy_to_staging_slot:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    steps:
    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure WebApp staging slot
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.webapp_name }} 
        slot-name: staging
        #images: openhackggp0ljh0acr.azurecr.io/devopsoh/api-poi:${{ github.run_number }} 
        images: ${{ env.registry }}/${{ env.repository }}:${{ github.run_number }}   
 
    - name: Azure Logout
      run: az logout
      
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUBTOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });

### The following code validates the staging slot (healthcheck) and swaps it with production slot ####
  validate_staging_and_swap_production:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: deploy_to_staging_slot
    steps:
    - name: POI Healthcheck
      id: poi-health-check
      uses: satak/webrequest-action@master
      with:
        url: https://openhackggp0ljh0poi-staging.azurewebsites.net/api/healthcheck/poi
        method: GET
    - name: Login via Az module
      uses: azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Check the health and Swap the Slots 
      shell: pwsh
      run: |
        $output = '${{ steps.poi-health-check.outputs.output }}' | ConvertFrom-Json
        Write-Host " Status code is $($output.statusCode) "
        if($($output.statusCode) -eq 200) {
        Write-host "Healthy"
        az webapp deployment slot swap --name openhackggp0ljh0poi --resource-group openhackggp0ljh0rg --slot staging --target-slot production
        }
        else {
        Write-Error "POI API is not healthy"
        }
 
    - name: Azure Logout
      run: az logout      
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUBTOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });


  
